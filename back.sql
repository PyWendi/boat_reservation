DROP TABLE IF EXISTS RECEPTIONNIST;
DROP TABLE IF EXISTS BATEAUX;
DROP TABLE IF EXISTS VOYAGE;
DROP TABLE IF EXISTS PASSAGER;
DROP TABLE IF EXISTS RESERVATION;
DROP TABLE IF EXISTS passager_reservation;
DROP TABLE IF EXISTS CLASS;


CREATE TABLE RECEPTIONNIST (
username VARCHAR(50) NOT NULL UNIQUE,
password VARCHAR(50) NOT NULL UNIQUE);

CREATE TABLE BATEAUX (
code_bat INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
design VARCHAR(30) NOT NULL UNIQUE,
capacité INT NOT NULL,
disponibilité BOOLEAN NOT NULL DEFAULT True,
class_a INT NOT NULL DEFAULT 0,
class_b INT NOT NULL DEFAULT 0,
class_c INT NOT NULL DEFAULT 0)
ENGINE=INNODB;

CREATE TABLE VOYAGE (
code_voyage INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
itinéraire VARCHAR(50) NOT NULL,
durée TIME NOT NULL,
date_depart DATETIME NOT NULL,
frais VARCHAR(50) NOT NULL,
finitude tinyint(1) DEFAULT 0,
code_bat INT NOT NULL)
ENGINE=INNODB;

CREATE TABLE PASSAGER (
id_pass INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
nom VARCHAR(150) NOT NULL,
prenom INT(200) NOT NULL,
email VARCHAR(250) UNIQUE,
tel VARCHAR(30) UNIQUE,
cin INT(50) UNIQUE,
class VARCHAR(10) NOT NULL,
id_voyage INT NOT NULL)
ENGINE=INNODB;

CREATE TABLE RESERVATION (
id_res INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
id_voyage INT NOT NULL DEFAULT 0,
class_A INT NOT NULL DEFAULT 0,
class_b INT NOT NULL DEFAULT 0,
class_c INT NOT NULL DEFAULT 0,
prenom VARCHAR(50) NOT NULL,
numero VARCHAR(30) NOT NULL,
payement VARCHAR(10) NOT NULL,
somme_paye INTEGER NOT NULL DEFAULT 0,
reste_paye INT NOT NULL DEFAULT 0,
fini tinyint(1) DEFAULT '0')
ENGINE=INNODB;

CREATE TABLE passager_reservation (
id_pass INT NOT NULL,
id_res INT NOT NULL,
PRIMARY KEY (id_pass,id_res))
ENGINE=INNODB;

CREATE TABLE CLASS (
code_bat INT NOT NULL UNIQUE,
classA INT NOT NULL DEFAULT 0,
classB INT NOT NULL DEFAULT 0,
classC INT NOT NULL DEFAULT 0)
ENGINE=INNODB;

ALTER TABLE VOYAGE ADD CONSTRAINT VOYAGE_code_bat_BATEAUX_code_bat FOREIGN KEY (code_bat) REFERENCES BATEAUX(code_bat) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE PASSAGER ADD CONSTRAINT PASSAGER_id_voyage_VOYAGE_code_voyage FOREIGN KEY (id_voyage) REFERENCES VOYAGE(code_voyage) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE RESERVATION ADD CONSTRAINT RESERVATION_id_voyage_VOYAGE_code_voyage FOREIGN KEY (id_voyage) REFERENCES VOYAGE(code_voyage) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE CLASS ADD CONSTRAINT CLASS_code_bat_BATEAUX_code_bat FOREIGN KEY (code_bat) REFERENCES BATEAUX(code_bat) ON DELETE CASCADE ON UPDATE CASCADE;
